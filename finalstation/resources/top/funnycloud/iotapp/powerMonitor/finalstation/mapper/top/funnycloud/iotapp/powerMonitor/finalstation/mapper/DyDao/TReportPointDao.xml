<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.funnycloud.iotapp.powerMonitor.finalstation.dao.IDao.DyDao.TReportPointDao">
  <resultMap id="BaseResultMap" type="top.funnycloud.iotdata.comm.report.model.roomdata.TReportPointModel">
    <id column="f_RecordID" jdbcType="INTEGER" property="p_recordid" />
    <result column="f_CompanyCD" jdbcType="VARCHAR" property="p_companycd" />
    <result column="f_ProjectCD" jdbcType="VARCHAR" property="p_projectcd" />
    <result column="f_RoomCD" jdbcType="VARCHAR" property="p_roomcd" />
    <result column="f_DataType" jdbcType="VARCHAR" property="p_datatype" />
    <result column="f_Remarks" jdbcType="VARCHAR" property="p_remarks" />
    <result column="f_UpdateTimes" jdbcType="TIMESTAMP" property="p_updatetimes" />
    <result column="f_CreateTimes" jdbcType="CHAR" property="p_createtimes" />
    <result column="f_JsonData" jdbcType="VARCHAR" property="p_jsondata" />
  </resultMap>
  <sql id="Base_Column_List">
    f_RecordID, f_CompanyCD, f_ProjectCD, f_RoomCD, f_DataType, f_Remarks, f_UpdateTimes,
    f_CreateTimes, f_JsonData
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ${tableName}
    where f_RecordID = #{recordid,jdbcType=INTEGER}
  </select>
  <select id="selectByCreatTime" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ${tableName}
    where f_CompanyCD = #{companycd,jdbcType=VARCHAR}   and f_ProjectCD = #{projectcd,jdbcType=VARCHAR}    and f_RoomCD = #{roomcd,jdbcType=VARCHAR}   and f_CreateTimes = #{creatTime,jdbcType=CHAR}
  </select>
  <select id="selectByParam"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from  ${tableName}
    where 1=1
    <if test="companycd!=null and companycd!=''">
      and  f_CompanyCD = #{companycd,jdbcType=VARCHAR}
    </if>
    <if test="projectcd!=null and projectcd!=''">
      and f_ProjectCD = #{projectcd,jdbcType=VARCHAR}
    </if>
    <if test="roomcd!=null and roomcd!=''">
      and f_RoomCD = #{roomcd,jdbcType=VARCHAR}
    </if>
    <if test="startTime!=null and startTime!=''">
      and f_CreateTimes  <![CDATA[   >=  ]]>  #{startTime,jdbcType=CHAR}
    </if>
    <if test="endTime!=null and  endTime!=''">
      and f_CreateTimes  <![CDATA[  <  ]]>  #{endTime,jdbcType=CHAR}
    </if>
    <if test="dataTypes!=null ">
      and f_DataType in
      <foreach item="item"
               index="index"
               collection="dataTypes"
               open="("
               separator=","
               close=")">
        #{item}
      </foreach>
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ${tableName}
    where f_RecordID = #{recordid,jdbcType=INTEGER}
  </delete>
  <insert id="upInsert"   useGeneratedKeys="true" keyProperty="item.p_recordid">

    insert into ${tableName} (f_CompanyCD, f_ProjectCD, f_RoomCD,
      f_DataType, f_Remarks, f_UpdateTimes,
      f_CreateTimes, f_JsonData)
    values
      (#{item.p_companycd,jdbcType=VARCHAR}, #{item.p_projectcd,jdbcType=VARCHAR}, #{item.p_roomcd,jdbcType=VARCHAR},
      #{item.p_datatype,jdbcType=VARCHAR}, #{item.p_remarks,jdbcType=VARCHAR}, #{item.p_updatetimes,jdbcType=TIMESTAMP},
      #{item.p_createtimes,jdbcType=CHAR}, #{item.p_jsondata,jdbcType=VARCHAR})
    ON DUPLICATE KEY UPDATE
    f_UpdateTimes = VALUES(f_UpdateTimes),
    f_JsonData = VALUES(f_JsonData)
  </insert>

  <insert id="upInserts"   useGeneratedKeys="true" keyProperty="list.p_recordid">

    insert into ${tableName} (f_CompanyCD, f_ProjectCD, f_RoomCD,
      f_DataType, f_Remarks, f_UpdateTimes,
      f_CreateTimes, f_JsonData)
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.p_companycd,jdbcType=VARCHAR}, #{item.p_projectcd,jdbcType=VARCHAR}, #{item.p_roomcd,jdbcType=VARCHAR},
      #{item.p_datatype,jdbcType=VARCHAR}, #{item.p_remarks,jdbcType=VARCHAR}, #{item.p_updatetimes,jdbcType=TIMESTAMP},
      #{item.p_createtimes,jdbcType=CHAR}, #{item.p_jsondata,jdbcType=VARCHAR})
    </foreach>

    ON DUPLICATE KEY UPDATE
    f_UpdateTimes = VALUES(f_UpdateTimes),
    f_JsonData = VALUES(f_JsonData)
  </insert>
</mapper>